/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface FlashBorrowerInterface extends ethers.utils.Interface {
  functions: {
    "flashBalance()": FunctionFragment;
    "flashBorrow(address,address,uint256)": FunctionFragment;
    "flashBorrowAndReenter(address,address,uint256)": FunctionFragment;
    "flashBorrowAndSteal(address,address,uint256)": FunctionFragment;
    "flashFee()": FunctionFragment;
    "flashToken()": FunctionFragment;
    "flashUser()": FunctionFragment;
    "flashValue()": FunctionFragment;
    "onFlashLoan(address,address,uint256,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "flashBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "flashBorrow",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "flashBorrowAndReenter",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "flashBorrowAndSteal",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "flashFee", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "flashToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "flashUser", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "flashValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onFlashLoan",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "flashBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "flashBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "flashBorrowAndReenter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "flashBorrowAndSteal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "flashFee", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flashToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flashUser", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flashValue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onFlashLoan",
    data: BytesLike
  ): Result;

  events: {};
}

export class FlashBorrower extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: FlashBorrowerInterface;

  functions: {
    flashBalance(overrides?: CallOverrides): Promise<[BigNumber]>;

    flashBorrow(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    flashBorrowAndReenter(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    flashBorrowAndSteal(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    flashFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    flashToken(overrides?: CallOverrides): Promise<[string]>;

    flashUser(overrides?: CallOverrides): Promise<[string]>;

    flashValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    onFlashLoan(
      user: string,
      token: string,
      value: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  flashBalance(overrides?: CallOverrides): Promise<BigNumber>;

  flashBorrow(
    lender: string,
    token: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  flashBorrowAndReenter(
    lender: string,
    token: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  flashBorrowAndSteal(
    lender: string,
    token: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  flashFee(overrides?: CallOverrides): Promise<BigNumber>;

  flashToken(overrides?: CallOverrides): Promise<string>;

  flashUser(overrides?: CallOverrides): Promise<string>;

  flashValue(overrides?: CallOverrides): Promise<BigNumber>;

  onFlashLoan(
    user: string,
    token: string,
    value: BigNumberish,
    fee: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    flashBalance(overrides?: CallOverrides): Promise<BigNumber>;

    flashBorrow(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    flashBorrowAndReenter(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    flashBorrowAndSteal(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    flashFee(overrides?: CallOverrides): Promise<BigNumber>;

    flashToken(overrides?: CallOverrides): Promise<string>;

    flashUser(overrides?: CallOverrides): Promise<string>;

    flashValue(overrides?: CallOverrides): Promise<BigNumber>;

    onFlashLoan(
      user: string,
      token: string,
      value: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    flashBalance(overrides?: CallOverrides): Promise<BigNumber>;

    flashBorrow(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    flashBorrowAndReenter(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    flashBorrowAndSteal(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    flashFee(overrides?: CallOverrides): Promise<BigNumber>;

    flashToken(overrides?: CallOverrides): Promise<BigNumber>;

    flashUser(overrides?: CallOverrides): Promise<BigNumber>;

    flashValue(overrides?: CallOverrides): Promise<BigNumber>;

    onFlashLoan(
      user: string,
      token: string,
      value: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    flashBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flashBorrow(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    flashBorrowAndReenter(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    flashBorrowAndSteal(
      lender: string,
      token: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    flashFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flashToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flashUser(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flashValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onFlashLoan(
      user: string,
      token: string,
      value: BigNumberish,
      fee: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
