/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DummyXToken, DummyXTokenInterface } from "../DummyXToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200006060405180604001604052806006815260200165414d4f47555360d01b81525060405180604001604052806006815260200165414d4f47555360d01b8152506200006660201b60201c565b62000387565b600054610100900460ff168062000080575060005460ff16155b620000d85760405162461bcd60e51b815260206004820152602e60248201526000805160206200109a83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015620000fb576000805461ffff19166101011790555b6200010562000129565b620001118383620001d0565b801562000124576000805461ff00191690555b505050565b600054610100900460ff168062000143575060005460ff16155b620001975760405162461bcd60e51b815260206004820152602e60248201526000805160206200109a83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000cf565b600054610100900460ff16158015620001ba576000805461ffff19166101011790555b8015620001cd576000805461ff00191690555b50565b600054610100900460ff1680620001ea575060005460ff16155b6200023e5760405162461bcd60e51b815260206004820152602e60248201526000805160206200109a83398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000cf565b600054610100900460ff1615801562000261576000805461ffff19166101011790555b825162000276906036906020860190620002a4565b5081516200028c906037906020850190620002a4565b50801562000124576000805461ff0019169055505050565b828054620002b2906200034a565b90600052602060002090601f016020900481019282620002d6576000855562000321565b82601f10620002f157805160ff191683800117855562000321565b8280016001018555821562000321579182015b828111156200032157825182559160200191906001019062000304565b506200032f92915062000333565b5090565b5b808211156200032f576000815560010162000334565b600181811c908216806200035f57607f821691505b602082108114156200038157634e487b7160e01b600052602260045260246000fd5b50919050565b610d0380620003976000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101bd578063a457c2d7146101c5578063a9059cbb146101d8578063dd62ed3e146101eb57600080fd5b806340c10f191461016c57806370a082311461018157806379cc6790146101aa57600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461015957600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610224565b6040516100f99190610bfa565b60405180910390f35b610115610110366004610bd1565b6102b6565b60405190151581526020016100f9565b6035545b6040519081526020016100f9565b610115610145366004610b96565b6102cc565b604051601281526020016100f9565b610115610167366004610bd1565b610397565b61017f61017a366004610bd1565b6103ce565b005b61012961018f366004610b43565b6001600160a01b031660009081526033602052604090205490565b61017f6101b8366004610bd1565b6103dc565b6100ec610479565b6101156101d3366004610bd1565b610488565b6101156101e6366004610bd1565b61053b565b6101296101f9366004610b64565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461023390610c7c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610c7c565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b60006102c3338484610548565b50600192915050565b60006102d98484846106a1565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156103785760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038c85336103878685610c65565b610548565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916102c3918590610387908690610c4d565b6103d882826108c2565b5050565b6001600160a01b0382166000908152603460209081526040808320338452909152902054808211156104505760405162461bcd60e51b815260206004820152601560248201527f4e6f20616c6c6f77616e636520666f72206275726e0000000000000000000000604482015260640161036f565b600061045c8383610c65565b9050610469843383610548565b61047384846109a1565b50505050565b60606037805461023390610c7c565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156105225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161036f565b61053133856103878685610c65565b5060019392505050565b60006102c33384846106a1565b6001600160a01b0383166105c35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b03821661063f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661071d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0382166107995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b038316600090815260336020526040902054818110156108285760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161036f565b6108328282610c65565b6001600160a01b038086166000908152603360205260408082209390935590851681529081208054849290610868908490610c4d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108b491815260200190565b60405180910390a350505050565b6001600160a01b0382166109185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161036f565b806035600082825461092a9190610c4d565b90915550506001600160a01b03821660009081526033602052604081208054839290610957908490610c4d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a1d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b03821660009081526033602052604090205481811015610aac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b610ab68282610c65565b6001600160a01b03841660009081526033602052604081209190915560358054849290610ae4908490610c65565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610694565b80356001600160a01b0381168114610b3e57600080fd5b919050565b600060208284031215610b54578081fd5b610b5d82610b27565b9392505050565b60008060408385031215610b76578081fd5b610b7f83610b27565b9150610b8d60208401610b27565b90509250929050565b600080600060608486031215610baa578081fd5b610bb384610b27565b9250610bc160208501610b27565b9150604084013590509250925092565b60008060408385031215610be3578182fd5b610bec83610b27565b946020939093013593505050565b6000602080835283518082850152825b81811015610c2657858101830151858201604001528201610c0a565b81811115610c375783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c6057610c60610cb7565b500190565b600082821015610c7757610c77610cb7565b500390565b600181811c90821680610c9057607f821691505b60208210811415610cb157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e1ff6979a8d01547cc32eaf4117f97c48fb7ef2c742dffcc14578b8a7485b49e64736f6c63430008040033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

export class DummyXToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyXToken> {
    return super.deploy(overrides || {}) as Promise<DummyXToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyXToken {
    return super.attach(address) as DummyXToken;
  }
  connect(signer: Signer): DummyXToken__factory {
    return super.connect(signer) as DummyXToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyXTokenInterface {
    return new utils.Interface(_abi) as DummyXTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyXToken {
    return new Contract(address, _abi, signerOrProvider) as DummyXToken;
  }
}
