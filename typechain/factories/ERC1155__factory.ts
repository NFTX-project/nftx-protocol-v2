/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "publicMintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1938038062001c19833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6119db806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c80637e2ce52311610076578063a22cb4651161005b578063a22cb46514610186578063e985e9c514610199578063f242432a146101d557600080fd5b80637e2ce523146101605780639f02c81e1461017357600080fd5b80630e89341c116100a75780630e89341c1461010b5780632eb2c2d61461012b5780634e1273f41461014057600080fd5b8062fdd58e146100c257806301ffc9a7146100e8575b600080fd5b6100d56100d03660046114f1565b6101e8565b6040519081526020015b60405180910390f35b6100fb6100f6366004611617565b610291565b60405190151581526020016100df565b61011e610119366004611656565b61032e565b6040516100df91906117d5565b61013e61013936600461133d565b6103c2565b005b61015361014e36600461154c565b610464565b6040516100df9190611794565b61013e61016e366004611446565b6105da565b61013e61018136600461151a565b6105fa565b61013e6101943660046114b7565b610615565b6100fb6101a736600461130b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61013e6101e33660046113e3565b610700565b60006001600160a01b03831661026b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a260000000000000000000000000000000000000000000000000000000014806102f457506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061032857507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606002805461033d9061183b565b80601f01602080910402602001604051908101604052809291908181526020018280546103699061183b565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103de57506103de85336101a7565b6104505760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610262565b61045d858585858561079b565b5050505050565b606081518351146104dd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610262565b6000835167ffffffffffffffff81111561050757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610530578160200160208202803683370190505b50905060005b84518110156105d25761059785828151811061056257634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061058a57634e487b7160e01b600052603260045260246000fd5b60200260200101516101e8565b8282815181106105b757634e487b7160e01b600052603260045260246000fd5b60209081029190910101526105cb816118a3565b9050610536565b509392505050565b6105f583838360405180602001604052806000815250610a60565b505050565b6105f583838360405180602001604052806000815250610c42565b336001600160a01b03831614156106945760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610262565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03851633148061071c575061071c85336101a7565b61078e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610262565b61045d8585858585610d4c565b81518351146107fd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610262565b6001600160a01b0384166108615760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610262565b3360005b84518110156109f257600085828151811061089057634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106108bc57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561094f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610262565b6109598282611824565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109d7919061180c565b92505081905550505050806109eb906118a3565b9050610865565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a429291906117a7565b60405180910390a4610a58818787878787610ef3565b505050505050565b6001600160a01b038416610ac05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610262565b8151835114610b225760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610262565b3360005b8451811015610bda57838181518110610b4f57634e487b7160e01b600052603260045260246000fd5b6020026020010151600080878481518110610b7a57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610bc2919061180c565b90915550819050610bd2816118a3565b915050610b26565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c2b9291906117a7565b60405180910390a461045d81600087878787610ef3565b6001600160a01b038416610ca25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610262565b33610cbc81600087610cb3886110a8565b61045d886110a8565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610cec90849061180c565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461045d81600087878787611101565b6001600160a01b038416610db05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610262565b33610dc0818787610cb3886110a8565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610e445760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610262565b610e4e8482611824565b6000868152602081815260408083206001600160a01b038c81168552925280832093909355881681529081208054869290610e8a90849061180c565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610eea828888888888611101565b50505050505050565b6001600160a01b0384163b15610a585760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f3790899089908890889088906004016116f3565b602060405180830381600087803b158015610f5157600080fd5b505af1925050508015610f81575060408051601f3d908101601f19168201909252610f7e9181019061163a565b60015b61103757610f8d6118ea565b806308c379a01415610fc75750610fa2611902565b80610fad5750610fc9565b8060405162461bcd60e51b815260040161026291906117d5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610262565b6001600160e01b0319811663bc197c8160e01b14610eea5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610262565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106110f057634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610a585760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111459089908990889088908890600401611751565b602060405180830381600087803b15801561115f57600080fd5b505af192505050801561118f575060408051601f3d908101601f1916820190925261118c9181019061163a565b60015b61119b57610f8d6118ea565b6001600160e01b0319811663f23a6e6160e01b14610eea5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610262565b80356001600160a01b038116811461122357600080fd5b919050565b600082601f830112611238578081fd5b81356020611245826117e8565b6040516112528282611876565b8381528281019150858301600585901b87018401881015611271578586fd5b855b8581101561128f57813584529284019290840190600101611273565b5090979650505050505050565b600082601f8301126112ac578081fd5b813567ffffffffffffffff8111156112c6576112c66118d4565b6040516112dd601f8301601f191660200182611876565b8181528460208386010111156112f1578283fd5b816020850160208301379081016020019190915292915050565b6000806040838503121561131d578182fd5b6113268361120c565b91506113346020840161120c565b90509250929050565b600080600080600060a08688031215611354578081fd5b61135d8661120c565b945061136b6020870161120c565b9350604086013567ffffffffffffffff80821115611387578283fd5b61139389838a01611228565b945060608801359150808211156113a8578283fd5b6113b489838a01611228565b935060808801359150808211156113c9578283fd5b506113d68882890161129c565b9150509295509295909350565b600080600080600060a086880312156113fa578081fd5b6114038661120c565b94506114116020870161120c565b93506040860135925060608601359150608086013567ffffffffffffffff81111561143a578182fd5b6113d68882890161129c565b60008060006060848603121561145a578283fd5b6114638461120c565b9250602084013567ffffffffffffffff8082111561147f578384fd5b61148b87838801611228565b935060408601359150808211156114a0578283fd5b506114ad86828701611228565b9150509250925092565b600080604083850312156114c9578182fd5b6114d28361120c565b9150602083013580151581146114e6578182fd5b809150509250929050565b60008060408385031215611503578182fd5b61150c8361120c565b946020939093013593505050565b60008060006060848603121561152e578283fd5b6115378461120c565b95602085013595506040909401359392505050565b6000806040838503121561155e578182fd5b823567ffffffffffffffff80821115611575578384fd5b818501915085601f830112611588578384fd5b81356020611595826117e8565b6040516115a28282611876565b8381528281019150858301600585901b870184018b10156115c1578889fd5b8896505b848710156115ea576115d68161120c565b8352600196909601959183019183016115c5565b5096505086013592505080821115611600578283fd5b5061160d85828601611228565b9150509250929050565b600060208284031215611628578081fd5b81356116338161198c565b9392505050565b60006020828403121561164b578081fd5b81516116338161198c565b600060208284031215611667578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561169d57815187529582019590820190600101611681565b509495945050505050565b60008151808452815b818110156116cd576020818501810151868301820152016116b1565b818111156116de5782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261171f60a083018661166e565b8281036060840152611731818661166e565b9050828103608084015261174581856116a8565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261178960a08301846116a8565b979650505050505050565b602081526000611633602083018461166e565b6040815260006117ba604083018561166e565b82810360208401526117cc818561166e565b95945050505050565b60208152600061163360208301846116a8565b600067ffffffffffffffff821115611802576118026118d4565b5060051b60200190565b6000821982111561181f5761181f6118be565b500190565b600082821015611836576118366118be565b500390565b600181811c9082168061184f57607f821691505b6020821081141561187057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561189c5761189c6118d4565b6040525050565b60006000198214156118b7576118b76118be565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156118ff57600481823e5160e01c5b90565b600060443d10156119105790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561194057505050505090565b82850191508151818111156119585750505050505090565b843d87010160208285010111156119725750505050505090565b61198160208286010187611876565b509095945050505050565b6001600160e01b0319811681146119a257600080fd5b5056fea26469706673582212208b5edfeb9b012cb4957d3956c885721b40701a0eb9d41597577372c801cdc5da64736f6c63430008040033";

export class ERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
