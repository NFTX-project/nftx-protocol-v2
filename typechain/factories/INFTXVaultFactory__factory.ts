/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  INFTXVaultFactory,
  INFTXVaultFactoryInterface,
} from "../INFTXVaultFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "DisableVaultFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeExcluded",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "FeeExclusion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldEligManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newEligManager",
        type: "address",
      },
    ],
    name: "NewEligibilityManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldDistributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newDistributor",
        type: "address",
      },
    ],
    name: "NewFeeDistributor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "NewVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldZap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newZap",
        type: "address",
      },
    ],
    name: "NewZapContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomRedeemFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetRedeemFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetSwapFee",
        type: "uint256",
      },
    ],
    name: "UpdateFactoryFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomRedeemFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetRedeemFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetSwapFee",
        type: "uint256",
      },
    ],
    name: "UpdateVaultFees",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeDistributor",
        type: "address",
      },
    ],
    name: "__NFTXVaultFactory_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_assetAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "is1155",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "allowAllItems",
        type: "bool",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "disableVaultFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibilityManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "excludedFromFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryMintFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryRandomRedeemFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryRandomSwapFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryTargetRedeemFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryTargetSwapFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eligibilityManager",
        type: "address",
      },
    ],
    name: "setEligibilityManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomRedeemFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetRedeemFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomSwapFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetSwapFee",
        type: "uint256",
      },
    ],
    name: "setFactoryFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeDistributor",
        type: "address",
      },
    ],
    name: "setFeeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_excludedAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "setFeeExclusion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomRedeemFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetRedeemFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomSwapFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetSwapFee",
        type: "uint256",
      },
    ],
    name: "setVaultFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_zapContract",
        type: "address",
      },
    ],
    name: "setZapContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeChildTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "vaultFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "vaultsForAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zapContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class INFTXVaultFactory__factory {
  static readonly abi = _abi;
  static createInterface(): INFTXVaultFactoryInterface {
    return new utils.Interface(_abi) as INFTXVaultFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INFTXVaultFactory {
    return new Contract(address, _abi, signerOrProvider) as INFTXVaultFactory;
  }
}
