/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockVault, MockVaultInterface } from "../MockVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_is1155",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "assetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is1155",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161047e38038061047e83398101604081905261002f9161005f565b60008054911515600160a01b026001600160a81b03199092166001600160a01b03909316929092171790556100a7565b60008060408385031215610071578182fd5b82516001600160a01b0381168114610087578283fd5b6020840151909250801515811461009c578182fd5b809150509250929050565b6103c8806100b66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306f26dc214610051578063150b7a021461008b5780631ba46cfd146100f3578063b10402ea14610138575b600080fd5b6000546100769074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6100c2610099366004610209565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610082565b6000546101139073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610082565b61014f6101463660046102c1565b60009392505050565b604051908152602001610082565b803573ffffffffffffffffffffffffffffffffffffffff8116811461018157600080fd5b919050565b600082601f830112610196578081fd5b8135602067ffffffffffffffff8211156101b2576101b2610363565b8160051b6101c1828201610332565b8381528281019086840183880185018910156101db578687fd5b8693505b858410156101fd5780358352600193909301929184019184016101df565b50979650505050505050565b6000806000806080858703121561021e578384fd5b6102278561015d565b9350602061023681870161015d565b935060408601359250606086013567ffffffffffffffff80821115610259578384fd5b818801915088601f83011261026c578384fd5b81358181111561027e5761027e610363565b610290601f8201601f19168501610332565b915080825289848285010111156102a5578485fd5b8084840185840137810190920192909252939692955090935050565b6000806000606084860312156102d5578283fd5b833567ffffffffffffffff808211156102ec578485fd5b6102f887838801610186565b9450602086013591508082111561030d578384fd5b5061031a86828701610186565b9250506103296040850161015d565b90509250925092565b604051601f8201601f1916810167ffffffffffffffff8111828210171561035b5761035b610363565b604052919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bb1f4dcb11fa51993249de711a9a882c7c954cdeb9ad0aa2f2ac209c7f82893064736f6c63430008040033";

export class MockVault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _assetAddress: string,
    _is1155: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockVault> {
    return super.deploy(
      _assetAddress,
      _is1155,
      overrides || {}
    ) as Promise<MockVault>;
  }
  getDeployTransaction(
    _assetAddress: string,
    _is1155: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_assetAddress, _is1155, overrides || {});
  }
  attach(address: string): MockVault {
    return super.attach(address) as MockVault;
  }
  connect(signer: Signer): MockVault__factory {
    return super.connect(signer) as MockVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVaultInterface {
    return new utils.Interface(_abi) as MockVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVault {
    return new Contract(address, _abi, signerOrProvider) as MockVault;
  }
}
