/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTXDenyEligibility,
  NFTXDenyEligibilityInterface,
} from "../NFTXDenyEligibility";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "negateElig",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "finalize",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NFTXEligibilityInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isEligible",
        type: "bool",
      },
    ],
    name: "UniqueEligibilitiesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "negateElig",
        type: "bool",
      },
    ],
    name: "negateEligilityOnRedeemSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "bool",
        name: "negateElig",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "finalize",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "__NFTXEligibility_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_configData",
        type: "bytes",
      },
    ],
    name: "__NFTXEligibility_init_bytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllIneligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkEligible",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkIsEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isUniqueEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "negateEligOnRedeem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_negateEligOnRedeem",
        type: "bool",
      },
    ],
    name: "setEligibilityPreferences",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_isEligible",
        type: "bool",
      },
    ],
    name: "setUniqueEligibilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061157f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80636cd91260116100d8578063bd8affde1161008c578063d6eed93711610066578063d6eed937146102f0578063f2fde38b14610304578063fbd5cb201461031757600080fd5b8063bd8affde146101d9578063ca373f28146102ca578063d2a096e8146102dd57600080fd5b806384ca9f85116100bd57806384ca9f851461029e5780638da5cb5b146102b1578063b3f05b97146102c257600080fd5b80636cd9126014610276578063715018a61461029657600080fd5b80633d4403ac1161012f5780634998b7f3116101145780634998b7f3146102505780635e2f9b52146102635780636c47d595146101d957600080fd5b80633d4403ac14610222578063423515c41461023d57600080fd5b806336eb08621161016057806336eb0862146101d9578063392e53cd146101eb5780633942cf361461020f57600080fd5b806306fdde031461017c5780630a7e4096146101c4575b600080fd5b604080518082018252600481527f44656e7900000000000000000000000000000000000000000000000000000000602082015290516101bb9190611403565b60405180910390f35b6101d76101d2366004611111565b61032a565b005b6101d76101e7366004611197565b5050565b6066546101ff90600160a01b900460ff1681565b60405190151581526020016101bb565b6101ff61021d366004611300565b61054d565b60005b6040516001600160a01b0390911681526020016101bb565b6101d761024b366004611257565b610580565b6101d761025e366004611273565b610632565b6101d7610271366004611197565b610725565b610289610284366004611197565b61078d565b6040516101bb9190611399565b6101d761086c565b6101ff6102ac366004611197565b61091d565b6033546001600160a01b0316610225565b6101ff610979565b6101ff6102d8366004611197565b6109b4565b6101ff6102eb366004611300565b610a06565b6066546101ff90600160a81b900460ff1681565b6101d7610312366004611010565b610a11565b6101d7610325366004611207565b610b50565b600054610100900460ff1680610343575060005460ff16155b6103ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156103cd576000805461ffff19166101011790555b6103d5610bb4565b6001600160a01b03861661042b5760405162461bcd60e51b815260206004820152601360248201527f4f776e657220213d20616464726573732830290000000000000000000000000060448201526064016103a2565b6001600160a01b0385166104815760405162461bcd60e51b815260206004820152601360248201527f5661756c7420213d20616464726573732830290000000000000000000000000060448201526064016103a2565b60668054600160a01b7fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b038816171760ff60a81b1916600160a81b861515021790556104d8826001610c77565b7fab54c710aa0ff99f4b7667b84e94caebe3d960186b2588d4309acd5cdf0ab2b7868686868660405161050f959493929190611352565b60405180910390a1821561052a5761052561086c565b610533565b61053386610a11565b8015610545576000805461ff00191690555b505050505050565b60008061055c610100846114ab565b6000818152606560205260409020549091506105788185610d87565b949350505050565b6033546001600160a01b031633146105da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a2565b60668054821515600160a81b0260ff60a81b199091161790556040517f9038d4f71df700fd5979d0e9b93f30d31a3e528411cf593749e474ee836568599061062790831515815260200190565b60405180910390a150565b600054610100900460ff168061064b575060005460ff16155b6106ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a2565b600054610100900460ff161580156106d0576000805461ffff19166101011790555b6106d8610bb4565b6000806000806000868060200190518101906106f4919061102c565b9450945094509450945061070b858584868561032a565b505050505080156101e7576000805461ff00191690555050565b6066546001600160a01b0316331461073c57600080fd5b606654600160a81b900460ff16156101e7576101e782828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525060019250610c77915050565b60608160008167ffffffffffffffff8111156107b957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107e2578160200160208202803683370190505b50905060005b828110156108615761081f86868381811061081357634e487b7160e01b600052603260045260246000fd5b90506020020135610da7565b82828151811061083f57634e487b7160e01b600052603260045260246000fd5b9115156020928302919091019091015280610859816114bf565b9150506107e8565b509150505b92915050565b6033546001600160a01b031633146108c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a2565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36033805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081815b8181101561096e5761094d85858381811061081357634e487b7160e01b600052603260045260246000fd5b61095c57600092505050610866565b80610966816114bf565b915050610922565b506001949350505050565b606654600090600160a01b900460ff1680156109af575060006109a46033546001600160a01b031690565b6001600160a01b0316145b905090565b600081815b8181101561096e576109e485858381811061081357634e487b7160e01b600052603260045260246000fd5b156109f457600092505050610866565b806109fe816114bf565b9150506109b9565b600061086682610da7565b6033546001600160a01b03163314610a6b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a2565b6001600160a01b038116610ae75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103a2565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36033805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610baa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a2565b6101e78282610c77565b600054610100900460ff1680610bcd575060005460ff16155b610c305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a2565b600054610100900460ff16158015610c52576000805461ffff19166101011790555b610c5a610db9565b610c62610e6a565b8015610c74576000805461ff00191690555b50565b600080805260656020527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b5490805b8451811015610d35576000858281518110610cd157634e487b7160e01b600052603260045260246000fd5b60200260200101519050600061010082610ceb91906114ab565b9050838114610d13576000938452606560205260408085209590955580845293909220549291825b610d1e858388610f6c565b945050508080610d2d906114bf565b915050610ca6565b5060008181526065602052604090819020839055517ffacde3821ab1224682dd0ab6a805f71860b6ca6982ad044c8c4927ea4c6f140190610d7990869086906113df565b60405180910390a150505050565b600080610d96610100846114e6565b9390931c6001908116149392505050565b6000610db28261054d565b1592915050565b600054610100900460ff1680610dd2575060005460ff16155b610e355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a2565b600054610100900460ff16158015610c62576000805461ffff19166101011790558015610c74576000805461ff001916905550565b600054610100900460ff1680610e83575060005460ff16155b610ee65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a2565b600054610100900460ff16158015610f08576000805461ffff19166101011790555b6033805473ffffffffffffffffffffffffffffffffffffffff19163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610c74576000805461ff001916905550565b600080610f7b610100856114e6565b90508215610f90576001901b84179050610f9a565b6001901b19841690505b9392505050565b600082601f830112610fb1578081fd5b81356020610fc6610fc183611487565b611456565b80838252828201915082860187848660051b8901011115610fe5578586fd5b855b8581101561100357813584529284019290840190600101610fe7565b5090979650505050505050565b600060208284031215611021578081fd5b8135610f9a81611526565b600080600080600060a08688031215611043578081fd5b855161104e81611526565b8095505060208087015161106181611526565b60408801519095506110728161153b565b60608801519094506110838161153b565b608088015190935067ffffffffffffffff81111561109f578283fd5b8701601f810189136110af578283fd5b80516110bd610fc182611487565b8082825284820191508484018c868560051b87010111156110dc578687fd5b8694505b838510156110fe5780518352600194909401939185019185016110e0565b5080955050505050509295509295909350565b600080600080600060a08688031215611128578081fd5b853561113381611526565b9450602086013561114381611526565b935060408601356111538161153b565b925060608601356111638161153b565b9150608086013567ffffffffffffffff81111561117e578182fd5b61118a88828901610fa1565b9150509295509295909350565b600080602083850312156111a9578182fd5b823567ffffffffffffffff808211156111c0578384fd5b818501915085601f8301126111d3578384fd5b8135818111156111e1578485fd5b8660208260051b85010111156111f5578485fd5b60209290920196919550909350505050565b60008060408385031215611219578182fd5b823567ffffffffffffffff81111561122f578283fd5b61123b85828601610fa1565b925050602083013561124c8161153b565b809150509250929050565b600060208284031215611268578081fd5b8135610f9a8161153b565b60006020808385031215611285578182fd5b823567ffffffffffffffff8082111561129c578384fd5b818501915085601f8301126112af578384fd5b8135818111156112c1576112c1611510565b6112d3601f8201601f19168501611456565b915080825286848285010111156112e8578485fd5b80848401858401378101909201929092529392505050565b600060208284031215611311578081fd5b5035919050565b6000815180845260208085019450808401835b838110156113475781518752958201959082019060010161132b565b509495945050505050565b60006001600160a01b0380881683528087166020840152508415156040830152831515606083015260a0608083015261138e60a0830184611318565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113d35783511515835292840192918401916001016113b5565b50909695505050505050565b6040815260006113f26040830185611318565b905082151560208301529392505050565b6000602080835283518082850152825b8181101561142f57858101830151858201604001528201611413565b818111156114405783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561147f5761147f611510565b604052919050565b600067ffffffffffffffff8211156114a1576114a1611510565b5060051b60200190565b6000826114ba576114ba6114fa565b500490565b60006000198214156114df57634e487b7160e01b81526011600452602481fd5b5060010190565b6000826114f5576114f56114fa565b500690565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c7457600080fd5b8015158114610c7457600080fdfea2646970667358221220b68e762375d0bbb6482a102928fe3783b92f930486fb52d8b2dcd290a390c5b764736f6c63430008040033";

export class NFTXDenyEligibility__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTXDenyEligibility> {
    return super.deploy(overrides || {}) as Promise<NFTXDenyEligibility>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTXDenyEligibility {
    return super.attach(address) as NFTXDenyEligibility;
  }
  connect(signer: Signer): NFTXDenyEligibility__factory {
    return super.connect(signer) as NFTXDenyEligibility__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTXDenyEligibilityInterface {
    return new utils.Interface(_abi) as NFTXDenyEligibilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTXDenyEligibility {
    return new Contract(address, _abi, signerOrProvider) as NFTXDenyEligibility;
  }
}
