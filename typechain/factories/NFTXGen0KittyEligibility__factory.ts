/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTXGen0KittyEligibility,
  NFTXGen0KittyEligibilityInterface,
} from "../NFTXGen0KittyEligibility";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "NFTXEligibilityInit",
    type: "event",
  },
  {
    inputs: [],
    name: "__NFTXEligibility_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "__NFTXEligibility_init_bytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllIneligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkEligible",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkIsEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636cd912601161008c578063b3f05b9711610066578063b3f05b97146101c0578063bd8affde1461012c578063ca373f28146101c7578063d2a096e8146101da57600080fd5b80636cd912601461017557806384ca9f8514610195578063b1eb9f87146101b857600080fd5b80634998b7f3116100bd5780634998b7f3146101625780635e2f9b521461012c5780636c47d5951461012c57600080fd5b806306fdde03146100e457806336eb08621461012c5780633d4403ac14610140575b600080fd5b604080518082018252600981527f47656e304b6974747900000000000000000000000000000000000000000000006020820152905161012391906107fc565b60405180910390f35b61013e61013a366004610603565b5050565b005b6040517306012c8cf97bead5deae237070f9587f8e7a266d8152602001610123565b61013e6101703660046106f4565b6101ed565b610188610183366004610603565b6102bc565b60405161012391906107b6565b6101a86101a3366004610603565b61039b565b6040519015158152602001610123565b61013e6103f7565b60016101a8565b6101a86101d5366004610603565b6104e2565b6101a86101e836600461079e565b610534565b600054610100900460ff1680610206575060005460ff16155b61027d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff1615801561029f576000805461ffff19166101011790555b6102a76103f7565b801561013a576000805461ff00191690555050565b60608160008167ffffffffffffffff8111156102e857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610311578160200160208202803683370190505b50905060005b828110156103905761034e86868381811061034257634e487b7160e01b600052603260045260246000fd5b9050602002013561053b565b82828151811061036e57634e487b7160e01b600052603260045260246000fd5b91151560209283029190910190910152806103888161084f565b915050610317565b509150505b92915050565b600081815b818110156103ec576103cb85858381811061034257634e487b7160e01b600052603260045260246000fd5b6103da57600092505050610395565b806103e48161084f565b9150506103a0565b506001949350505050565b600054610100900460ff1680610410575060005460ff16155b6104825760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610274565b600054610100900460ff161580156104a4576000805461ffff19166101011790555b6040517fb708568a0e67d40b1324a610ddd779500570f113513f944a791cc7b8b4970dec90600090a180156104df576000805461ff00191690555b50565b600081815b818110156103ec5761051285858381811061034257634e487b7160e01b600052603260045260246000fd5b1561052257600092505050610395565b8061052c8161084f565b9150506104e7565b6000610395825b6040517fe98b7f4d0000000000000000000000000000000000000000000000000000000081526004810182905260009081907306012c8cf97bead5deae237070f9587f8e7a266d9063e98b7f4d906024016101406040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd9190610673565b50159b9a5050505050505050505050565b805180151581146105fe57600080fd5b919050565b60008060208385031215610615578182fd5b823567ffffffffffffffff8082111561062c578384fd5b818501915085601f83011261063f578384fd5b81358181111561064d578485fd5b8660208260051b8501011115610661578485fd5b60209290920196919550909350505050565b6000806000806000806000806000806101408b8d031215610692578586fd5b61069b8b6105ee565b99506106a960208c016105ee565b985060408b0151975060608b0151965060808b0151955060a08b0151945060c08b0151935060e08b015192506101008b015191506101208b015190509295989b9194979a5092959850565b600060208284031215610705578081fd5b813567ffffffffffffffff8082111561071c578283fd5b818401915084601f83011261072f578283fd5b81358181111561074157610741610876565b604051601f8201601f19908116603f0116810190838211818310171561076957610769610876565b81604052828152876020848701011115610781578586fd5b826020860160208301379182016020019490945295945050505050565b6000602082840312156107af578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107f05783511515835292840192918401916001016107d2565b50909695505050505050565b6000602080835283518082850152825b818110156108285785810183015185820160400152820161080c565b818111156108395783604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561086f57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a7da0c36b04f70e79d5ad307ef9dc49a6414de79fca6f3b19084097487a16cb564736f6c63430008040033";

export class NFTXGen0KittyEligibility__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTXGen0KittyEligibility> {
    return super.deploy(overrides || {}) as Promise<NFTXGen0KittyEligibility>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTXGen0KittyEligibility {
    return super.attach(address) as NFTXGen0KittyEligibility;
  }
  connect(signer: Signer): NFTXGen0KittyEligibility__factory {
    return super.connect(signer) as NFTXGen0KittyEligibility__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTXGen0KittyEligibilityInterface {
    return new utils.Interface(_abi) as NFTXGen0KittyEligibilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTXGen0KittyEligibility {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTXGen0KittyEligibility;
  }
}
