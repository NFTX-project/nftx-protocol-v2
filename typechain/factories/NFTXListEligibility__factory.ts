/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTXListEligibility,
  NFTXListEligibilityInterface,
} from "../NFTXListEligibility";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NFTXEligibilityInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isEligible",
        type: "bool",
      },
    ],
    name: "UniqueEligibilitiesSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "__NFTXEligibility_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_configData",
        type: "bytes",
      },
    ],
    name: "__NFTXEligibility_init_bytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllIneligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkEligible",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkIsEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isUniqueEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b6f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636cd912601161008c578063bd8affde11610066578063bd8affde14610137578063ca373f28146101ca578063d2a096e8146101dd578063facf895f146101f057600080fd5b80636cd912601461019057806384ca9f85146101b0578063b3f05b97146101c357600080fd5b80633d4403ac116100c85780633d4403ac1461016e5780634998b7f31461017d5780635e2f9b52146101375780636c47d5951461013757600080fd5b806306fdde03146100ef57806336eb0862146101375780633942cf361461014b575b600080fd5b604080518082018252600481527f4c697374000000000000000000000000000000000000000000000000000000006020820152905161012e9190610a16565b60405180910390f35b61014961014536600461072b565b5050565b005b61015e610159366004610947565b610203565b604051901515815260200161012e565b6040516000815260200161012e565b61014961018b3660046108ba565b610236565b6101a361019e36600461072b565b61031f565b60405161012e9190610999565b61015e6101be36600461072b565b6103fe565b600161015e565b61015e6101d836600461072b565b61045a565b61015e6101eb366004610947565b6104ac565b6101496101fe36600461079b565b6104b7565b60008061021261010084610abe565b60008181526001602052604090205490915061022e81856105bb565b949350505050565b600054610100900460ff168061024f575060005460ff16155b6102c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff161580156102e8576000805461ffff19166101011790555b6000828060200190518101906102fe9190610833565b9050610309816104b7565b508015610145576000805461ff00191690555050565b60608160008167ffffffffffffffff81111561034b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610374578160200160208202803683370190505b50905060005b828110156103f3576103b18686838181106103a557634e487b7160e01b600052603260045260246000fd5b905060200201356105db565b8282815181106103d157634e487b7160e01b600052603260045260246000fd5b91151560209283029190910190910152806103eb81610ad2565b91505061037a565b509150505b92915050565b600081815b8181101561044f5761042e8585838181106103a557634e487b7160e01b600052603260045260246000fd5b61043d576000925050506103f8565b8061044781610ad2565b915050610403565b506001949350505050565b600081815b8181101561044f5761048a8585838181106103a557634e487b7160e01b600052603260045260246000fd5b1561049a576000925050506103f8565b806104a481610ad2565b91505061045f565b60006103f8826105db565b600054610100900460ff16806104d0575060005460ff16155b6105425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016102bd565b600054610100900460ff16158015610564576000805461ffff19166101011790555b61056f8260016105e6565b7f57c1f3c63f373f6f173119ab80d232a4a8ca7449a0bdb2f33f6188847539e7458260405161059e91906109df565b60405180910390a18015610145576000805461ff00191690555050565b6000806105ca61010084610af9565b9390931c6001908116149392505050565b60006103f882610203565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb495490805b84518110156106a457600085828151811061064057634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006101008261065a9190610abe565b9050838114610682576000938452600160205260408085209590955580845293909220549291825b61068d8583886106f6565b94505050808061069c90610ad2565b915050610615565b5060008181526001602052604090819020839055517ffacde3821ab1224682dd0ab6a805f71860b6ca6982ad044c8c4927ea4c6f1401906106e890869086906109f2565b60405180910390a150505050565b60008061070561010085610af9565b9050821561071a576001901b84179050610724565b6001901b19841690505b9392505050565b6000806020838503121561073d578182fd5b823567ffffffffffffffff80821115610754578384fd5b818501915085601f830112610767578384fd5b813581811115610775578485fd5b8660208260051b8501011115610789578485fd5b60209290920196919550909350505050565b600060208083850312156107ad578182fd5b823567ffffffffffffffff8111156107c3578283fd5b8301601f810185136107d3578283fd5b80356107e66107e182610a9a565b610a69565b80828252848201915084840188868560051b8701011115610805578687fd5b8694505b83851015610827578035835260019490940193918501918501610809565b50979650505050505050565b60006020808385031215610845578182fd5b825167ffffffffffffffff81111561085b578283fd5b8301601f8101851361086b578283fd5b80516108796107e182610a9a565b80828252848201915084840188868560051b8701011115610898578687fd5b8694505b8385101561082757805183526001949094019391850191850161089c565b600060208083850312156108cc578182fd5b823567ffffffffffffffff808211156108e3578384fd5b818501915085601f8301126108f6578384fd5b81358181111561090857610908610b23565b61091a601f8201601f19168501610a69565b9150808252868482850101111561092f578485fd5b80848401858401378101909201929092529392505050565b600060208284031215610958578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561098e57815187529582019590820190600101610972565b509495945050505050565b6020808252825182820181905260009190848201906040850190845b818110156109d35783511515835292840192918401916001016109b5565b50909695505050505050565b602081526000610724602083018461095f565b604081526000610a05604083018561095f565b905082151560208301529392505050565b6000602080835283518082850152825b81811015610a4257858101830151858201604001528201610a26565b81811115610a535783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a9257610a92610b23565b604052919050565b600067ffffffffffffffff821115610ab457610ab4610b23565b5060051b60200190565b600082610acd57610acd610b0d565b500490565b6000600019821415610af257634e487b7160e01b81526011600452602481fd5b5060010190565b600082610b0857610b08610b0d565b500690565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204279ccc0ca12feb7e50954026adf761cff7d64d0530e43c5f3ba9862612b4a0864736f6c63430008040033";

export class NFTXListEligibility__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTXListEligibility> {
    return super.deploy(overrides || {}) as Promise<NFTXListEligibility>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTXListEligibility {
    return super.attach(address) as NFTXListEligibility;
  }
  connect(signer: Signer): NFTXListEligibility__factory {
    return super.connect(signer) as NFTXListEligibility__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTXListEligibilityInterface {
    return new utils.Interface(_abi) as NFTXListEligibilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTXListEligibility {
    return new Contract(address, _abi, signerOrProvider) as NFTXListEligibility;
  }
}
