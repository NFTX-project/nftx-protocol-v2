/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTXOpenseaEligibility,
  NFTXOpenseaEligibilityInterface,
} from "../NFTXOpenseaEligibility";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectionId",
        type: "uint256",
      },
    ],
    name: "NFTXEligibilityInit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionId",
        type: "uint256",
      },
    ],
    name: "__NFTXEligibility_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "configData",
        type: "bytes",
      },
    ],
    name: "__NFTXEligibility_init_bytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "afterRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeMintHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "beforeRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkAllIneligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "checkEligible",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkIsEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610846806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636cd912601161008c578063b3f05b9711610066578063b3f05b97146101ed578063bd8affde14610137578063ca373f28146101f4578063d2a096e81461020757600080fd5b80636cd912601461019757806377973ae8146101b757806384ca9f85146101ca57600080fd5b80633d4403ac116100c85780633d4403ac146101625780634998b7f3146101845780635e2f9b52146101375780636c47d5951461013757600080fd5b806306fdde03146100ef57806336eb0862146101375780633d26bb671461014b575b600080fd5b604080518082018252600781527f4f70656e736561000000000000000000000000000000000000000000000000006020820152905161012e9190610780565b60405180910390f35b6101496101453660046105f0565b5050565b005b61015460015481565b60405190815260200161012e565b60405173495f947276749ce646f68ac8c248420045cb7b5e815260200161012e565b610149610192366004610660565b61021a565b6101aa6101a53660046105f0565b610303565b60405161012e919061073a565b6101496101c536600461070a565b6103ea565b6101dd6101d83660046105f0565b610531565b604051901515815260200161012e565b60016101dd565b6101dd6102023660046105f0565b61058d565b6101dd61021536600461070a565b6105df565b600054610100900460ff1680610233575060005460ff16155b6102aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff161580156102cc576000805461ffff19166101011790555b6000828060200190518101906102e29190610722565b90506102ed816103ea565b508015610145576000805461ff00191690555050565b60608160008167ffffffffffffffff81111561032f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610358578160200160208202803683370190505b50905060005b828110156103df5761039d86868381811061038957634e487b7160e01b600052603260045260246000fd5b9050602002013560015460609190911c1490565b8282815181106103bd57634e487b7160e01b600052603260045260246000fd5b91151560209283029190910190910152806103d7816107d3565b91505061035e565b509150505b92915050565b600054610100900460ff1680610403575060005460ff16155b6104755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016102a1565b600054610100900460ff16158015610497576000805461ffff19166101011790555b816104e45760405162461bcd60e51b815260206004820152600a60248201527f43616e277420626520300000000000000000000000000000000000000000000060448201526064016102a1565b60018290556040518281527f8149ebb6ef626d669b8f1dc752f5b65e57fd929f7cd9ffb2eac100cdc67342089060200160405180910390a18015610145576000805461ff00191690555050565b600081815b818110156105825761056185858381811061038957634e487b7160e01b600052603260045260246000fd5b610570576000925050506103e4565b8061057a816107d3565b915050610536565b506001949350505050565b600081815b81811015610582576105bd85858381811061038957634e487b7160e01b600052603260045260246000fd5b156105cd576000925050506103e4565b806105d7816107d3565b915050610592565b600154600090606083901c146103e4565b60008060208385031215610602578182fd5b823567ffffffffffffffff80821115610619578384fd5b818501915085601f83011261062c578384fd5b81358181111561063a578485fd5b8660208260051b850101111561064e578485fd5b60209290920196919550909350505050565b600060208284031215610671578081fd5b813567ffffffffffffffff80821115610688578283fd5b818401915084601f83011261069b578283fd5b8135818111156106ad576106ad6107fa565b604051601f8201601f19908116603f011681019083821181831017156106d5576106d56107fa565b816040528281528760208487010111156106ed578586fd5b826020860160208301379182016020019490945295945050505050565b60006020828403121561071b578081fd5b5035919050565b600060208284031215610733578081fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b81811015610774578351151583529284019291840191600101610756565b50909695505050505050565b6000602080835283518082850152825b818110156107ac57858101830151858201604001528201610790565b818111156107bd5783604083870101525b50601f01601f1916929092016040019392505050565b60006000198214156107f357634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220097b528c1178f22e924d88dedde17d044a224600a6703cbbe63fed5e996d23a064736f6c63430008040033";

export class NFTXOpenseaEligibility__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTXOpenseaEligibility> {
    return super.deploy(overrides || {}) as Promise<NFTXOpenseaEligibility>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTXOpenseaEligibility {
    return super.attach(address) as NFTXOpenseaEligibility;
  }
  connect(signer: Signer): NFTXOpenseaEligibility__factory {
    return super.connect(signer) as NFTXOpenseaEligibility__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTXOpenseaEligibilityInterface {
    return new utils.Interface(_abi) as NFTXOpenseaEligibilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTXOpenseaEligibility {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTXOpenseaEligibility;
  }
}
