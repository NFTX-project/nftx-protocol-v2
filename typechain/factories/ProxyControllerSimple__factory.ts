/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProxyControllerSimple,
  ProxyControllerSimpleInterface,
} from "../ProxyControllerSimple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "ImplAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "ProxyAdminChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchImplAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
    ],
    name: "upgradeProxyTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107d83803806107d883398101604081905261002f91610095565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b03929092169190911790556100c3565b6000602082840312156100a6578081fd5b81516001600160a01b03811681146100bc578182fd5b9392505050565b610706806100d26000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638abf60771161005b5780638abf6077146100d65780638da5cb5b146100e95780639f712f2f146100fa578063f2fde38b1461010d57600080fd5b806355dbd8eb1461008d578063671f0f50146100a25780636e9960c3146100aa578063715018a6146100ce575b600080fd5b6100a061009b36600461067d565b610120565b005b6100a06101fa565b6100b26102e1565b6040516001600160a01b03909116815260200160405180910390f35b6100a061037c565b6001546100b2906001600160a01b031681565b6000546001600160a01b03166100b2565b6100a061010836600461067d565b61042d565b6100a061011b36600461067d565b61053f565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6002546040517f3659cfe60000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015290911690633659cfe690602401600060405180830381600087803b1580156101df57600080fd5b505af11580156101f3573d6000803e3d6000fd5b5050505050565b600260009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561024857600080fd5b505afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028091906106a0565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691821790556040519081527f58c17955ba6053cfb96ced3ab34a889aa2f05af8d10f083eba8d45993504a9a99060200160405180910390a1565b600254604080517ff851a44000000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163f851a440916004808301926020929190829003018186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037791906106a0565b905090565b6000546001600160a01b031633146103d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146104875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b6002546040517f8f2839700000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015290911690638f28397090602401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6235ad59b847efc75cf784228706832e1151064976e4a1ef1b8493cafeab7d409250602001905060405180910390a150565b6000546001600160a01b031633146105995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610176565b6001600160a01b0381166106155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610176565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006020828403121561068e578081fd5b8135610699816106b8565b9392505050565b6000602082840312156106b1578081fd5b8151610699815b6001600160a01b03811681146106cd57600080fd5b5056fea26469706673582212205924e4208ba7fcbeaea32d934560d37d8ed25bf42b8a86ee6337ae2a7430320164736f6c63430008040033";

export class ProxyControllerSimple__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyControllerSimple> {
    return super.deploy(
      _proxy,
      overrides || {}
    ) as Promise<ProxyControllerSimple>;
  }
  getDeployTransaction(
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxy, overrides || {});
  }
  attach(address: string): ProxyControllerSimple {
    return super.attach(address) as ProxyControllerSimple;
  }
  connect(signer: Signer): ProxyControllerSimple__factory {
    return super.connect(signer) as ProxyControllerSimple__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyControllerSimpleInterface {
    return new utils.Interface(_abi) as ProxyControllerSimpleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyControllerSimple {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProxyControllerSimple;
  }
}
