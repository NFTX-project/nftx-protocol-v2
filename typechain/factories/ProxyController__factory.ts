/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProxyController,
  ProxyControllerInterface,
} from "../ProxyController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "eligManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeDistrib",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "ImplAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "ProxyAdminChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAllProxyAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eligManagerImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDistribImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "fetchImplAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingProviderImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
    ],
    name: "upgradeProxyTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultFactoryImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010fb380380620010fb8339810160408190526200003491620000f5565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b03199081166001600160a01b03978816179091556007805482169587169590951790945560088054851693861693909317909255600980548416918516919091179055600a8054909216921691909117905562000164565b80516001600160a01b0381168114620000f057600080fd5b919050565b600080600080600060a086880312156200010d578081fd5b6200011886620000d8565b94506200012860208701620000d8565b93506200013860408701620000d8565b92506200014860608701620000d8565b91506200015860808701620000d8565b90509295509295909350565b610f8780620001746000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063b9d1abba1161008c578063e5e412cf11610066578063e5e412cf146101a0578063ef1dcd51146101b3578063f0dce629146101c6578063f2fde38b146101d957600080fd5b8063b9d1abba14610167578063be91ae021461017a578063c003d6671461018d57600080fd5b8063715018a6116100bd578063715018a61461013b5780638da5cb5b14610143578063b4113cc81461015457600080fd5b8063111fd88b146100e4578063194376a7146101135780634acaaec914610126575b600080fd5b6100f76100f2366004610ef5565b6101ec565b6040516001600160a01b03909116815260200160405180910390f35b6002546100f7906001600160a01b031681565b610139610134366004610f0d565b6103e0565b005b6101396105ad565b6000546001600160a01b03166100f7565b6004546100f7906001600160a01b031681565b6003546100f7906001600160a01b031681565b610139610188366004610eb6565b610651565b61013961019b366004610ef5565b6106e5565b6005546100f7906001600160a01b031681565b6101396101c1366004610f0d565b610b62565b6001546100f7906001600160a01b031681565b6101396101e7366004610eb6565b610d85565b60008161027f57600660009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561024157600080fd5b505afa158015610255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102799190610ed9565b92915050565b81600114156102d657600760009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561024157600080fd5b816002141561032d57600860009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561024157600080fd5b816003141561038457600960009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561024157600080fd5b81600414156103db57600a60009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561024157600080fd5b919050565b6000546001600160a01b0316331461043f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b816104a857600654604051631b2ce7f360e11b81526001600160a01b03838116600483015290911690633659cfe6906024015b600060405180830381600087803b15801561048c57600080fd5b505af11580156104a0573d6000803e3d6000fd5b505050505050565b81600114156104e357600754604051631b2ce7f360e11b81526001600160a01b03838116600483015290911690633659cfe690602401610472565b816002141561051e57600854604051631b2ce7f360e11b81526001600160a01b03838116600483015290911690633659cfe690602401610472565b816003141561055957600954604051631b2ce7f360e11b81526001600160a01b03838116600483015290911690633659cfe690602401610472565b81600414156105a957600a54604051631b2ce7f360e11b81526001600160a01b03838116600483015290911690633659cfe690602401600060405180830381600087803b15801561048c57600080fd5b5050565b6000546001600160a01b031633146106075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610436565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146106ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610436565b6106b6600082610b62565b6106c1600182610b62565b6106cc600282610b62565b6106d7600382610b62565b6106e2600482610b62565b50565b806107ce57600660009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561073857600080fd5b505afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107709190610ed9565b600180546001600160a01b0319166001600160a01b03929092169182179055604080516000815260208101929092527f7de8ab8b77228d35af67c8e9749f12679e02c3aeda9375749a9c354dd0066b6591015b60405180910390a150565b80600114156108b357600760009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190610ed9565b600280546001600160a01b0319166001600160a01b039290921691821790556040805183815260208101929092527f7de8ab8b77228d35af67c8e9749f12679e02c3aeda9375749a9c354dd0066b6591016107c3565b806002141561099857600860009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190610ed9565b600380546001600160a01b0319166001600160a01b039290921691821790556040805183815260208101929092527f7de8ab8b77228d35af67c8e9749f12679e02c3aeda9375749a9c354dd0066b6591016107c3565b8060031415610a7d57600960009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ef57600080fd5b505afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190610ed9565b600480546001600160a01b0319166001600160a01b039290921691821790556040805183815260208101929092527f7de8ab8b77228d35af67c8e9749f12679e02c3aeda9375749a9c354dd0066b6591016107c3565b80600414156106e257600a60009054906101000a90046001600160a01b03166001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad457600080fd5b505afa158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c9190610ed9565b600580546001600160a01b0319166001600160a01b039290921691821790556040805183815260208101929092527f7de8ab8b77228d35af67c8e9749f12679e02c3aeda9375749a9c354dd0066b6591016107c3565b6000546001600160a01b03163314610bbc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610436565b81610c26576006546040516308f2839760e41b81526001600160a01b03838116600483015290911690638f283970906024015b600060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b50505050610d40565b8160011415610c61576007546040516308f2839760e41b81526001600160a01b03838116600483015290911690638f28397090602401610bef565b8160021415610c9c576008546040516308f2839760e41b81526001600160a01b03838116600483015290911690638f28397090602401610bef565b8160031415610cd7576009546040516308f2839760e41b81526001600160a01b03838116600483015290911690638f28397090602401610bef565b8160041415610d4057600a546040516308f2839760e41b81526001600160a01b03838116600483015290911690638f28397090602401600060405180830381600087803b158015610d2757600080fd5b505af1158015610d3b573d6000803e3d6000fd5b505050505b604080518381526001600160a01b03831660208201527fdd46f7a110d29e571d4200939ad89fe6fd13f4bbdb521c01f8a8cef93ec2dd8d910160405180910390a15050565b6000546001600160a01b03163314610ddf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610436565b6001600160a01b038116610e5b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610436565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215610ec7578081fd5b8135610ed281610f3c565b9392505050565b600060208284031215610eea578081fd5b8151610ed281610f3c565b600060208284031215610f06578081fd5b5035919050565b60008060408385031215610f1f578081fd5b823591506020830135610f3181610f3c565b809150509250929050565b6001600160a01b03811681146106e257600080fdfea2646970667358221220b1a0ef54cfb79c43a94a24553fe6328b89e48355d0d07dcacd5ef16a635f79d264736f6c63430008040033";

export class ProxyController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    vaultFactory: string,
    eligManager: string,
    stakingProvider: string,
    staking: string,
    feeDistrib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyController> {
    return super.deploy(
      vaultFactory,
      eligManager,
      stakingProvider,
      staking,
      feeDistrib,
      overrides || {}
    ) as Promise<ProxyController>;
  }
  getDeployTransaction(
    vaultFactory: string,
    eligManager: string,
    stakingProvider: string,
    staking: string,
    feeDistrib: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vaultFactory,
      eligManager,
      stakingProvider,
      staking,
      feeDistrib,
      overrides || {}
    );
  }
  attach(address: string): ProxyController {
    return super.attach(address) as ProxyController;
  }
  connect(signer: Signer): ProxyController__factory {
    return super.connect(signer) as ProxyController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyControllerInterface {
    return new utils.Interface(_abi) as ProxyControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyController {
    return new Contract(address, _abi, signerOrProvider) as ProxyController;
  }
}
